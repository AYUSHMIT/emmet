name: testing

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ["emmet-core", "emmet-builders", "emmet-api"]
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install dependencies
        run: python -m pip install --upgrade pip flake8

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 --count --show-source --statistics ${{ matrix.package }}
          # exit-zero treats all errors as warnings.
          flake8 --count --exit-zero --max-complexity=20 --statistics ${{ matrix.package }}

  test:
    name: ${{ matrix.package }} (${{ matrix.os }}/py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    needs: lint
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest'] # TODO openbabel for windows
        package: ["emmet-core", "emmet-builders", "emmet-api"]
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install OpenBabel on Ubuntu
        if: ${{ matrix.os == 'ubuntu-latest' }}
        shell: bash -l {0}
        run: |
          sudo apt-get update && sudo apt-get install openbabel libopenbabel-dev
          sudo ln -s /usr/include/openbabel3 /usr/local/include/openbabel3
      - name: Install OpenBabel on MacOS
        if: ${{ matrix.os == 'macos-latest' }}
        shell: bash -l {0}
        run: brew install open-babel

      - name: Install Python dependencies
        shell: bash -l {0}
        run: |
          python${{ matrix.python-version }} -m pip install --upgrade pip pip-tools
          python${{ matrix.python-version }} -m piptools sync ${{ matrix.package }}/requirements/${{ matrix.os }}_py${{ matrix.python-version }}_extras.txt

      - name: Install editable emmet-core if needed
        shell: bash -l {0}
        if: matrix.package != 'emmet-core'
        run: python${{ matrix.python-version }} -m pip install -e emmet-core

      - name: Install ${{ matrix.package }}
        shell: bash -l {0}
        run: python${{ matrix.python-version }} -m pip install --no-deps -e ${{ matrix.package }}

      - name: Lint with mypy
        shell: bash -l {0}
        run: mypy --namespace-package ${{ matrix.package }}/emmet

      - name: Test with pytest
        shell: bash -l {0}
        run: pytest --cov=emmet --cov-report=xml tests/${{ matrix.package }}

      - uses: codecov/codecov-action@v3.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml

  docs:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install --upgrade pip pip-tools
          pip-sync emmet-*/requirements/ubuntu-latest_py3.9_extras.txt docs/requirements.txt
          pip install --no-deps -e emmet-core emmet-api emmet-builders

      - name: Build
        run: mkdocs build
